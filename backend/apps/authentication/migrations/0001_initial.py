# Generated by Django 5.1.1 on 2025-08-14 04:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0004_industry_company_company_image_urls_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_type', models.CharField(choices=[('resume', 'Resume'), ('profile_photo', 'Profile Photo'), ('cover_letter', 'Cover Letter'), ('company_logo', 'Company Logo'), ('job_attachment', 'Job Attachment'), ('document', 'Document')], max_length=20)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_status', models.CharField(choices=[('pending', 'Pending'), ('uploaded', 'Uploaded'), ('failed', 'Failed'), ('deleted', 'Deleted')], default='pending', max_length=20)),
                ('upload_url_expires_at', models.DateTimeField()),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'file_uploads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('email', models.EmailField(help_text='Email address to send invitation', max_length=254)),
                ('invitation_type', models.CharField(choices=[('superadmin', 'NI Admin'), ('admin', 'Company Admin')], help_text='Type of invitation', max_length=20)),
                ('token', models.CharField(help_text='Unique invitation token', max_length=64, unique=True)),
                ('invitation_status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('expired', 'Expired'), ('revoked', 'Revoked')], default='pending', max_length=20)),
                ('expires_at', models.DateTimeField(help_text='When invitation expires')),
                ('accepted_at', models.DateTimeField(blank=True, help_text='When invitation was accepted', null=True)),
                ('accepted_by', models.ForeignKey(blank=True, help_text='User who accepted the invitation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_invitations', to=settings.AUTH_USER_MODEL)),
                ('invited_by', models.ForeignKey(help_text='User who sent the invitation', on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('target_company', models.ForeignKey(blank=True, help_text='Company for company admin invitations', null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.company')),
            ],
            options={
                'indexes': [models.Index(fields=['token'], name='authenticat_token_7d9745_idx'), models.Index(fields=['email', 'invitation_status'], name='authenticat_email_bab20b_idx'), models.Index(fields=['expires_at'], name='authenticat_expires_1dfb70_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('invitation_status', 'pending')), fields=('email', 'invitation_type', 'invitation_status'), name='unique_pending_invitation_per_email_type')],
            },
        ),
    ]
