name: Talent-cloud CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-frontend-job:
    name: Build frontend
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies and build
        run: |
          ls
          cd frontend
          npm ci
          npm run build:staging

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  deploy-job:
    name: Deploy to staging
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    needs: build-frontend-job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Zip all and list the structure
        run: |
            cd ..
            tar -czf talent-cloud.tar.gz talent-cloud
            mv talent-cloud.tar.gz talent-cloud/
            cd talent-cloud
            tar -czf configurations.tar.gz configurations
            ls -lash 

      - name: Copy talent-cloud.tar.gz over scp
        uses: appleboy/scp-action@v0.1.7
        with:
            source: talent-cloud.tar.gz
            target: /home/ubuntu/talentcloud-networks/
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.STAGING_KEY }}
        

      - name: Copy configurations.tgz over scp
        uses: appleboy/scp-action@v0.1.7
        with:
            source: configurations.tar.gz
            target: /home/ubuntu/talentcloud-networks/
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.STAGING_KEY }}

      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@v1.2.0
        with:
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.STAGING_KEY }}
            script: |
                sudo tar -xf /home/ubuntu/talentcloud-networks/talent-cloud.tar.gz -C /home/ubuntu/talentcloud-networks
                sudo rm -rf /home/ubuntu/talentcloud-networks/talent-cloud.tar.gz
                sudo tar -xf /home/ubuntu/talentcloud-networks/configurations.tar.gz -C /home/ubuntu/talentcloud-networks
                sudo rm -rf /home/ubuntu/talentcloud-networks/configurations.tar.gz

                sudo cp -r /home/ubuntu/talentcloud-networks/talent-cloud/frontend/dist /var/www/dist

                sudo systemctl restart nginx

                sudo virtualenv -p python3 /home/ubuntu/venv

                sudo chown -R ubuntu:ubuntu /home/ubuntu/venv
                sudo chown -R ubuntu:ubuntu /home/ubuntu/talentcloud-networks/talent-cloud
                sudo chown -R ubuntu:ubuntu /home/ubuntu/talentcloud-networks/configurations

                echo ":unlock: Decrypting staging environment..."
                cd /home/ubuntu/talentcloud_networks/talent-cloud/backend
            
                export GPG_PASSPHRASE="${{ secrets.GPG_PASSPHRASE }}"
                bash scripts/decrypt_staging.sh

                source /home/ubuntu/venv/bin/activate
                cd /home/ubuntu/talentcloud-networks/talent-cloud/backend && python -m pip install -r requirements.txt && python manage.py migrate && python manage.py collectstatic --noinput --clear && cd -




           
        
