name: Talent-cloud CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-frontend-job:
    name: Build frontend
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies and build
        run: |
          ls
          cd frontend
          npm ci
          npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  deploy-job:
    name: Deploy to staging
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    needs: build-frontend-job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Zip all and list the structure
        run: |
            cd ..
            tar -czf talent-cloud.tar.gz talent-cloud
            mv talent-cloud.tar.gz talent-cloud/
            cd talent-cloud
            tar -czf configurations.tar.gz configurations
            ls -lash 

      - name: Copy talent-cloud.tar.gz over scp
        uses: appleboy/scp-action@v0.1.7
        with:
            source: talent-cloud.tar.gz
            target: /home/ubuntu/talentcloud-networks/
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.STAGING_KEY }}
        

      - name: Copy configurations.tgz over scp
        uses: appleboy/scp-action@v0.1.7
        with:
            source: configurations.tar.gz
            target: /home/ubuntu/talentcloud-networks/
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.STAGING_KEY }}

      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@v1.2.0
        with:
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.STAGING_KEY }}
            script: |
                sudo tar -xf /home/ubuntu/talentcloud-networks/talent-cloud.tar.gz -C /home/ubuntu/talentcloud-networks
                sudo rm -rf /home/ubuntu/talentcloud-networks/talent-cloud.tar.gz
                sudo tar -xf /home/ubuntu/talentcloud-networks/configurations.tar.gz -C /home/ubuntu/talentcloud-networks
                sudo rm -rf /home/ubuntu/talentcloud-networks/configurations.tar.gz

                sudo supervisorctl stop talent-cloud-celery
                sudo supervisorctl stop talent-cloud-beat
                sudo supervisorctl stop talent-cloud-daphne
                sudo supervisorctl stop talent-cloud-flower


                sudo rm -rf /var/www/dist
                sudo rm -rf /etc/supervisor/conf.d/talent-cloud_supervisord.conf
                sudo cp -r /home/ubuntu/talentcloud-networks/talent-cloud/frontend/dist /var/www/dist
                sudo cp -r /home/ubuntu/talentcloud-networks/talent-cloud/configurations/staging/talent-cloud_supervisord.conf /etc/supervisor/conf.d/

                sudo systemctl restart nginx

                sudo virtualenv -p python3 /home/ubuntu/venv

                sudo chown -R ubuntu:ubuntu /home/ubuntu/venv
                sudo chown -R ubuntu:ubuntu /home/ubuntu/talentcloud-networks/talent-cloud
                sudo chown -R ubuntu:ubuntu /home/ubuntu/talentcloud-networks/configurations/staging

                sudo chmod +x /home/ubuntu/talentcloud-networks/configurations/staging/talent-cloud_beat.sh
                sudo chmod +x /home/ubuntu/talentcloud-networks/configurations/staging/talent-cloud_celery.sh
                sudo chmod +x /home/ubuntu/talentcloud-networks/configurations/staging/talent-cloud_daphne.sh
                sudo chmod +x /home/ubuntu/talentcloud-networks/configurations/staging/talent-cloud_flower.sh

                echo ":unlock: Decrypting staging environment..."
                cd /home/ubuntu/talentcloud-networks/talent-cloud/backend
                ls
            
                echo "Exporting GPG PASSPHRASE..."
                export GPG_PASSPHRASE="${{ secrets.GPG_PASSPHRASE }}"
                
                echo "Decrypting Staging Environment Secrets..."
                bash scripts/decrypt_staging.sh

                echo "Activating virtual environment..."
                source /home/ubuntu/venv/bin/activate
                
                echo "Entering into server directory..."
                cd /home/ubuntu/talentcloud-networks/talent-cloud/backend
                
                export DJANGO_SETTINGS_MODULE=main.config.settings.staging
                export ENV=staging

                echo "üì¶ Installing dependencies..."
                python -m pip install -r requirements.txt
                
                echo "Performing migrate..."
                python manage.py migrate
                
                echo "Importing Initial App Data..."
                python manage.py import_initial_data
                
                echo "Creating Superuser..."
                python manage.py create_superuser 
                
                echo "Collecting Staticfiles..."
                python manage.py collectstatic --noinput --clear
                cd -

                echo "‚öôÔ∏è Starting services..."
                sudo systemctl start  supervisor.service
                sudo supervisorctl reread && sudo supervisorctl update
                sudo supervisorctl start talent-cloud-celery
                sudo supervisorctl start talent-cloud-beat
                sudo supervisorctl start talent-cloud-daphne
                sudo supervisorctl start talent-cloud-flower
                
                echo "Entering into server directory..."
                cd /home/ubuntu/talentcloud-networks/talent-cloud/backend
                
                echo "Syncing Celery Periodic Tasks"
                python manage.py manage_periodic_tasks --sync --force
                cd -

                echo "üîß Setting socket permissions..."
                sudo chmod +x /home/ubuntu/talentcloud-networks/configurations/staging/daphne.sock
                
                echo "‚úÖ Staging environment deployed successfully!"